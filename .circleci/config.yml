references:
  ignore_deployable_branches: &ignore_deployable_branches
    filters: { branches: { ignore: [ main, staging, preprod ] } }

  test_container_config: &test_container_config
    working_directory: ~/app
    resource_class: small
    docker:
      - image: cimg/ruby:3.4.1
        environment:
          RAILS_ENV: test
          PGHOST: 127.0.0.1
          PGUSER: ubuntu
          RACK_ENV: test
          AWS_DEFAULT_REGION: eu-west-2
          NOMIS_OAUTH_HOST: https://test-auth-service.example.com
          NOMIS_OAUTH_CLIENT_ID: test-client-id
          MOCK_AUTH: 1
      - image: circleci/postgres:10.5-alpine
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_PASSWORD: ""
          POSTGRES_DB: hmpps_complexity_of_need_test

version: 2.1

orbs:
  ruby: circleci/ruby@2.4.0
  hmpps: ministryofjustice/hmpps@10.2.0

jobs:
  install_dependencies:
    <<: *test_container_config
    steps:
      - checkout
      - ruby/install-deps

  rubocop:
    <<: *test_container_config
    steps:
      - checkout
      - ruby/install-deps
      - ruby/rubocop-check

  run_tests:
    <<: *test_container_config
    steps:
      - checkout
      - ruby/install-deps
      - run:
          name: Security analysis
          command: bundle exec brakeman -o ~/test-results/brakeman/brakeman.json -o ~/test-results/brakeman/brakeman.html
      - ruby/rspec-test

workflows:
  build_and_test:
    jobs:
      - install_dependencies:
          <<: *ignore_deployable_branches
      - rubocop:
          requires:
            - install_dependencies
      - run_tests:
          requires:
            - install_dependencies
      - hmpps/helm_lint:
          name: helm_lint
          env: staging
      - hmpps/build_docker:
          <<: *ignore_deployable_branches
          name: verify_docker_image
          publish: false
          requires:
            - helm_lint
      - hmpps/build_docker:
          name: build_and_push_image
          persist_container_image: true
          requires:
            - helm_lint
          filters: { branches: { only: [ main, staging, preprod ] } }
      - hmpps/deploy_env:
          name: deploy_staging
          env: staging
          context:
            - hmpps-common-vars # needed to fetch the ip-allowlist-groups
          requires:
            - build_and_push_image
          filters: { branches: { only: [ main, staging ] } }
      - hmpps/deploy_env:
          name: deploy_preprod
          env: preprod
          context:
            - hmpps-common-vars # needed to fetch the ip-allowlist-groups
            - hmpps-complexity-of-need-preprod
          requires:
            - build_and_push_image
          filters: { branches: { only: [ main, preprod ] } }
      - deploy_production_approval:
          type: approval
          requires:
            - deploy_staging
          filters: { branches: { only: [ main ] } }
      - hmpps/deploy_env:
          name: deploy_production
          env: production
          context:
            - hmpps-common-vars # needed to fetch the ip-allowlist-groups, and slack notification
            - hmpps-complexity-of-need-production
          requires:
            - deploy_production_approval
          slack_notification: true
          slack_channel_name: the_elephants_devs
